---
- name: Create PostgreSQL databases
  community.postgresql.postgresql_db:
    name: "{{ item.name }}"
    login_host: localhost
    login_user: "{{ postgresql_admin_user }}"
    login_password: "{{ postgresql_admin_password | default('') }}"
    owner: "{{ item.owner | default(postgresql_admin_user) }}"
    encoding: "{{ item.encoding | default(postgresql_default_encoding) }}"
    template: "{{ item.template | default('template0') }}"
    lc_collate: "{{ item.lc_collate | default(postgresql_default_locale) }}"
    lc_ctype: "{{ item.lc_ctype | default(postgresql_default_locale) }}"
    state: present
  become: true
  become_user: "{{ postgresql_admin_user }}"
  loop: "{{ postgresql_databases }}"

- name: Grant privileges on databases
  community.postgresql.postgresql_privs:
    db: "{{ item.name }}"
    login_host: localhost
    login_user: "{{ postgresql_admin_user }}"
    login_password: "{{ postgresql_admin_password | default('') }}"
    role: "{{ item.owner }}"
    type: database
    privs: "{{ item.privileges | default('ALL') }}"
    grant_option: "{{ item.grant_option | default(false) }}"
    state: present
  become: true
  become_user: "{{ postgresql_admin_user }}"
  loop: "{{ postgresql_databases }}"
  when: item.owner is defined and item.owner != postgresql_admin_user
